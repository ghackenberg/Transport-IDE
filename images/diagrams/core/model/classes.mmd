classDiagram
    direction LR

    class Intersection {
        <<Entity>>
        Name: String
        Radius: Double
        ComputeRadius()
    }
    class Segment {
        <<Entity>>
        Speed: Double
        Lanes: Double
        Length: Double
        AngleX: Double
        AngleY: Double
        AngleZ: Double
        ComputeLength()
        ComputeTangent()
        ComputeNormal()
        ComputeAngleX()
        ComputeAngleY()
        ComputeAngleZ()
    }
    class Location {
        <<Structure>>
        Distance: Double
        ComputeCoordinate()
    }
    class LocationTime {
        <<Structure>>
        Time: Double
    }
    class Station {
        <<Entity>>
        Speed: Double
    }
    class Vehicle {
        <<Entity>>
        BatteryCapacity: Double
        BatteryLevel: Double
        DemandCapacity: Double
        DemandLevel: Double
        Length: Double
        Speed: Double
    }
    class Demand {
        <<Entity>>
        Size: Double
    }
    class Vector {
        <<Structure>>
        X: Double
        Y: Double
        Z: Double
    }
    
    Segment --> "1" Intersection:Start
    Segment --> "1" Intersection:End
    Station --> "1" Location
    Vehicle --> "1" Location:Initial
    Vehicle --> "1" Location:Current
    Demand --> "1" LocationTime:Pick
    Demand --> "1" LocationTime:Drop
    Demand --> "1" LocationTime:Current
    LocationTime --> "1" Location
    Location --> "1" Segment

    Intersection --> "1" Vector:Coordinate
    Segment --> "1" Vector:Tangent
    Segment --> "1" Vector:Normal
    Location --> "1" Vector:Coordinate

    style Vector fill:white,stroke:gray
    style Location fill:white,stroke:gray
    style LocationTime fill:white,stroke:gray